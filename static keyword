When a static keyword is used, variables, data members, and functions can not be modified again.
It is allocated for the lifetime of the program. Static functions can be called directly by using a class name.

Key Points of Static Variables
Static variables are variables that are defined using static keywords, which consist of special behavior compared to regular variables. Here we will see its key points.

1. Static variables are initialized only once. The compiler persists the variable till the end of the program.
2. Static variables can be defined inside or outside the function. They are local to the block.
3. The default value of the static variable is zero.
4. The static variables are alive till the execution of the program.


#include <bits/stdc++.h>
using namespace std;

class Base {
   public:
      static int val;  // Static variable
      static void func(int a) {  // Static member function
         cout << "\nStatic member function called";
         cout << "\nThe value of a: " << a;
      }
};

// Definition of the static variable outside the class
int Base::val = 28;
int main() {
   Base::func(8);
   cout << "\nThe static variable value: " << Base::val;
   
   return 0;
}
